name: Linting and Testing
on:
  pull_request:
    branches:
      - main

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry export -f requirements.txt --output requirements.txt --without-hashes --with=dev
          pip install -r requirements.txt

      - name: Run linters
        run: |
          mkdir test_results
          bandit -c pyproject.toml -r .
          ruff check .
          ruff format --check .
          mypy .

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry export -f requirements.txt --output requirements.txt --without-hashes --with=dev
          pip install -r requirements.txt

      - name: Run tests
        run: pytest --junitxml=test_results/TEST-pytest.xml

      - name: Publish test report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: "test_results/TEST-*.xml"
