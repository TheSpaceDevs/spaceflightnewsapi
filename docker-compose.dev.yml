volumes:
  database:
  rabbitmq:

services:
  database:
    image: postgres:15-alpine
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 2s
      timeout: 5s
      retries: 15
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  consumer:
    build:
      context: .
    restart: unless-stopped
    command: python manage.py consume
    env_file: .env
    environment:
      - DB_HOST=database
      - AMQP_HOST=rabbitmq
    depends_on:
      database:
        condition: service_healthy


  beat:
    build:
      context: .
    restart: unless-stopped
    command: celery -A snapy beat -l INFO
    env_file: .env
    environment:
      - DB_HOST=database
      - AMQP_HOST=rabbitmq
    depends_on:
      database:
        condition: service_healthy


  worker:
    build:
      context: .
    restart: unless-stopped
    command: celery -A snapy worker -l INFO
    env_file: .env
    environment:
      - DB_HOST=database
      - AMQP_HOST=rabbitmq
    depends_on:
      database:
        condition: service_healthy
