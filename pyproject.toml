[project]
name = "snapy"
version = "4.20.0"
description = "Spaceflight News API (SNAPI) enables developers to add the latest spaceflight news to their apps."
authors = [{ name = "Derk Weijers", email = "derk@weijers.xyz" }]
readme = "README.md"
requires-python = ">=3.13,<3.14"  # Pin to Python 3.13 for compatibility with Django 5.2
dependencies = [
    "boto3>=1.35.23",
    "django-cors-headers>=4.4.0",
    "django-filter>=24.3",
    "django-health-check>=3.18.3",
    "django-jet-reboot>=1.3.9",
    "django-storages>=1.14.4",
    "django-stubs[compatible-mypy]>=5.2,<5.3", # Pinned to 5.2.* for compatibility with Django 5.2
    "django-stubs-ext>=5.2,<5.3", # Pinned to 5.2.* for compatibility with Django 5.2
    "django>=5.2,<5.3",
    "djangorestframework>=3.15.2",
    "drf-spectacular>=0.27.2",
    "environs[django]>=11.0.0",
    "feedparser>=6.0.11",
    "gunicorn>=23.0.0",
    "httpx>=0.27.2",
    "markdown>=3.7",
    "psycopg2-binary>=2.9.9",
    "pyyaml>=6.0.2",
    "sentry-sdk>=2.14.0",
    "uritemplate>=4.1.1",
    "harvester>=0.12.0",
    "graphene-django>=3.2.2",
    "redis>=5.2.0",
    "hiredis>=3.1.0",
]

[tool.uv]
dev-dependencies = [
    "bandit[toml]>=1.7.9",
    "commitizen>=4.0.0",
    "coverage>=7.6.1",
    "django-debug-toolbar>=4.4.6",
    "django-filter-stubs>=0.1.3",
    "djangorestframework-stubs[compatible-mypy]>=3.16",
    "mypy>=1.13,<1.18", # Pinned range for compatibility with Django 5.2
    "peek-python>=25.0.7",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.9.0",
    "python-semantic-release>=9.14.0",
    "pyupgrade>=3.17.0",
    "ruff>=0.6.6",
]

[tool.mypy]
strict = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "snapy.settings"

[tool.ruff]
extend-exclude = ["src/snapy/settings.py"]
line-length = 121

[tool.ruff.lint]
select = ["E", "W", "F", "I", "DJ", "UP"]

[tool.bandit]
exclude_dirs = ["tests/", ".github/", ".venv/"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "snapy.settings"

[[tool.uv.index]]
name = "tsd"
url = "https://pypi.thespacedevs.com/simple/"
explicit = true

[tool.uv.sources]
harvester = { index = "tsd" }

# Mainly as fallback, as Python Semenatic Release will also handle this.
[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "pep621"
update_changelog_on_bump = false

[tool.semantic_release]
assets = []
commit_message = "build: {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "{version}"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/snapy/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.beta]
match = "beta"
prerelease_token = "rc"
prerelease = true

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat", "chore"]
patch_tags = ["fix", "perf"]
allowed_tags = [
    "feat",
    "fix",
    "perf",
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
